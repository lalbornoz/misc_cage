# $Id$
# collectd.conf (5) for mamba.sandngz.net. running FreeBSD/amd64 v9.2-RELEASE (Ports)
#	-- Configuration for the system statistics collection daemon collectd
#
# Config file for collectd(1).
# Please read collectd.conf(5) for a list of options.
# http://collectd.org/
#
# References:
# Mon May 26 13:52:10 CEST 2014 [1] Start page – collectd – The system statistics collection daemon <https://www.collectd.org/>
# Mon May 26 13:52:36 CEST 2014 [2] Features – collectd – The system statistics collection daemon <https://www.collectd.org/features.shtml>
# Mon May 26 13:52:51 CEST 2014 [3] Notifications and thresholds - collectd Wiki <https://collectd.org/wiki/index.php/Notifications_and_thresholds>
# Mon May 26 13:53:07 CEST 2014 [4] Plugin:Interface - collectd Wiki <https://collectd.org/wiki/index.php/Plugin:Interface>
#

# {{{ Global
# Global settings for the daemon.
#

Hostname	"mamba.sandngz.net"
FQDNLookup	true
BaseDir		"/var/db/collectd"
PIDFile		"/var/run/collectd.pid"
PluginDir	"/usr/local/lib/collectd"
TypesDB		"/usr/local/share/collectd/types.db"
Interval	1
Timeout		2
ReadThreads	5
# }}}
# {{{ Logging
# Plugins which provide logging functions should be loaded first, so log
# messages generated when loading or configuring other plugins can be
# accessed.
#

#LoadPlugin	syslog
#<Plugin syslog>
#	LogLevel	info
#</Plugin>

LoadPlugin	logfile
<Plugin logfile>
	LogLevel	info
	File		"/var/log/collectd.log"
	Timestamp	true
	PrintSeverity	true
</Plugin>
# }}}
# {{{ LoadPlugin section and Plugin configuration
#

LoadPlugin	interface
<Plugin	interface>
	Interface	"em0"
	IgnoreSelected	false
</Plugin>

#LoadPlugin	exec
#<Plugin exec>
#	NotificationExec	"nobody:nobody"	"/usr/local/etc/rc.d/collectd-exec.sh"	"notification"
#</Plugin>
# }}}
# {{{ Filter configuration
# The following configures collectd's filtering mechanism. Before changing
# anything in this section, please read the `FILTER CONFIGURATION' section
# in the collectd.conf(5) manual page.
#

# Load required matches:
##LoadPlugin	match_empty_counter
##LoadPlugin	match_hashed
##LoadPlugin	match_regex
##LoadPlugin	match_value
##LoadPlugin	match_timediff

# Load required targets:
##LoadPlugin	target_notification
##LoadPlugin	target_replace
##LoadPlugin	target_scale
##LoadPlugin	target_set

#
# The following block demonstrates the default behavior if no filtering is
# configured at all: All values will be sent to all available write plugins.
#

#<Chain "PostCache">
#	Target	"write"
#</Chain>
# }}}
# {{{ Threshold configuration
# Starting with version 4.3.0 collectd has support for monitoring. By that we
# mean that the values are not only stored or sent somewhere, but that they are
# judged and, if a problem is recognized, acted upon. The only action collectd
# takes itself is to generate and dispatch a "notification". Plugins can register
# to receive notifications and perform appropriate further actions.
# 
# Since systems and what you expect them to do differ a lot, you can configure
# thresholds for your values freely. This gives you a lot of flexibility but
# also a lot of responsibility.
# 
# Every time a value is out of range a notification is dispatched. This means
# that the idle percentage of your CPU needs to be less then the configured
# threshold only once for a notification to be generated. There's no such thing
# as a moving average or similar - at least not now.
# 
# Also, all values that match a threshold are considered to be relevant or
# "interesting". As a consequence collectd will issue a notification if they
# are not received for Timeout iterations. The Timeout configuration option
# is explained in section GLOBAL OPTIONS. If, for example, Timeout is set to
# "2" (the default) and some hosts sends it's CPU statistics to the server
# every 60 seconds, a notification will be dispatched after about 120 seconds.
# It may take a little longer because the timeout is checked only once each
# Interval on the server.
# 
# When a value comes within range again or is received after it was missing,
# an "OKAY-notification" is dispatched.
#
# [ ...]
#
# There are basically two types of configuration statements: The Host, Plugin,
# and Type blocks select the value for which a threshold should be configured.
# The Plugin and Type blocks may be specified further using the Instance option.
# You can combine the block by nesting the blocks, though they must be nested
# in the above order, i. e. Host may contain either Plugin and Type blocks,
# Plugin may only contain Type blocks and Type may not contain other blocks.
# If multiple blocks apply to the same value the most specific block is used.
#

<Threshold>
	<Host "mamba.sandngz.net">
		<Plugin "interface">
			# XXX - if_octets specifies _bytes_ not _bits per second, contrary to documentation
			# XXX - the `interface' plugin requires the `Instance' specification to reside inside
			# the `Type' block and not the `Plugin' block, which is not documented thus
			<Type "if_octets">
				Instance	"em0"
				WarningMax	6553600
				DataSource	"rx"
				Persist 	false
			</Type>
		</Plugin>
	</Host>
</Threshold>

<Threshold>
	<Plugin "interface">
		<Type "if_packets">
			Instance	"em0"
			WarningMax	7500
			DataSource	"rx"
			Persist 	false
		</Type>
	</Plugin>
</Threshold>
# }}}

# vim:ts=8 sw=8 tw=120 noexpandtab foldmethod=marker
